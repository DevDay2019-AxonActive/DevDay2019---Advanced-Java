input {
  file {
    path => "D:/Data/logs/devday2019app*.log"
	start_position => "beginning"
  }
}

filter {
  grok {
    patterns_dir => ["D:/tools/logstash-6.8.3/bin/extra"]
    match => {
	  "message" => [
			"^%{DATE4Y:date} - %{TIME:time} - %{DATA:instance} - %{DATA:app_name} - %{NUMBER:port} - %{DATA:level} -%{SPACE}%{DATA:class}%{SEP}%{DATA:message}$"
			]
	}
	overwrite => [ "message" ]
  }
  if [message] =~ /Service=.*, method=.*/ {
    grok {
	  match => {
	    "message" => [
			"Error occurred: Service=%{DATA:service}, method=%{DATA:method}. Input=%{DATA:input}, error=%{DATA:error}$",
			"Service=%{JAVACLASS:service}, method=%{DATA:method}, finished after=%{NUMBER:duration:int}ms. Input=%{DATA:input}$"
			]
	  }
    }
  }
  kv {
    source => "input"
	target => "userInput"
  }
  mutate { add_field => { "ts" => "%{date} %{time}" } }
  date {
    match => ["ts", "yyyy-MM-dd HH:mm:ss.SSS"]
    target => "@timestamp"
    timezone => "Asia/Ho_Chi_Minh"
  }
  mutate { remove_field => [ "ts", "input" ] }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
  }
}